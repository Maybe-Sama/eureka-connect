const fetch = require('node-fetch')

const API_BASE = 'http://localhost:3000/api'

async function fixCarmenSchedule() {
  try {
    console.log('üîß Corrigiendo horario de Carmen L√≥pez...')

    // Obtener datos actuales de Carmen L√≥pez
    const studentsResponse = await fetch(`${API_BASE}/students`)
    const students = studentsResponse.ok ? await studentsResponse.json() : []
    
    const carmen = students.find(s => s.first_name === 'Carmen' && s.last_name === 'L√≥pez')
    
    if (!carmen) {
      console.log('‚ùå No se encontr√≥ a Carmen L√≥pez')
      return
    }

    console.log(`üë§ Encontrada: ${carmen.first_name} ${carmen.last_name} (ID: ${carmen.id})`)
    console.log(`üìÖ Horario actual:`, carmen.fixed_schedule)

    // Crear el horario correcto: Martes (2) y Jueves (4) a las 19:00-20:30
    const correctSchedule = [
      {
        day_of_week: 2, // Martes
        start_time: '19:00',
        end_time: '20:30',
        subject: 'Matem√°ticas'
      },
      {
        day_of_week: 4, // Jueves
        start_time: '19:00',
        end_time: '20:30',
        subject: 'Matem√°ticas'
      }
    ]

    console.log(`‚úÖ Nuevo horario:`, correctSchedule)

    // Actualizar el horario fijo de Carmen
    const updateResponse = await fetch(`${API_BASE}/students/${carmen.id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        fixed_schedule: JSON.stringify(correctSchedule)
      })
    })

    if (updateResponse.ok) {
      console.log('‚úÖ Horario de Carmen L√≥pez actualizado correctamente')
      console.log('üìÖ Nuevo horario: Martes y Jueves 19:00-20:30 (Matem√°ticas)')
    } else {
      const error = await updateResponse.json()
      console.error('‚ùå Error actualizando horario:', error)
    }

  } catch (error) {
    console.error('‚ùå Error:', error)
  }
}

fixCarmenSchedule()
